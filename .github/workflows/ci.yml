name: Main CI

on:
  pull_request:
    branches:
      - main
  # deployment_status:

jobs:
  ci-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    # vercelへのデプロイがsuccessになってから実行する
    # if: github.event.deployment_status.state == 'success'
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - run: pnpm build
      - name: Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1
      - name: test
        run: pnpm test --max-workers ${{ steps.cpu-cores.outputs.count }}
      # - name: Install Playwright
      #   run: npx playwright install --with-deps chromium
      # - name: test e2e
      #   run: xvfb-run pnpm test:e2e --project=chromium
      # env:
      #   PLAYWRIGHT_TEST_BASE_URL: ${{ github.event.deployment_status.target_url }}s
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: playwright-report
      - name: lint
        run: pnpm lint
      - name: format
        run: pnpm format
      - name: check types
        run: pnpm check-types
